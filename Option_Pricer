import pandas as pd
import numpy as np
from math import exp, log, pi
from scipy.stats import norm
import matplotlib.pyplot as plt
import yfinance as yf


def stock_volatility(stock):
    univ = [stock]
    px = yf.download(univ, start="2020-01-03", end="2024-02-29")['Adj Close']
    ret = px.pct_change()
    ret.index = ret.index.date
    ret = ret.dropna()
    ret_df = pd.DataFrame(ret)
    ret_df.columns = ['Daily Returns']
    ret_df['Rolling_Sigma'] = ret_df['Daily Returns'].rolling(20).std() * np.sqrt(255)
    ret_df['price'] = px
    return ret_df


class Options:
    def __init__(self, S, K, T, r, sigma, q=0):
        self.S = S
        self.K = K
        self.T = T
        self.r = r 
        self.sigma = sigma
        self.q = q    ### dividend yield
        
        
    @staticmethod
    def N(x):
        return norm.cdf(x)
    
    @property
    def params(self):
        return {'S': self.S, 
                'K': self.K, 
                'T': self.T, 
                'r':self.r,
                'q':self.q,
                'sigma':self.sigma}
    
    
    def d1(self):
        return (np.log(self.S/self.K) + (self.r + self.sigma**2/2)*self.T) / (self.sigma*np.sqrt(self.T))
    
    
    
    def d2(self):
        return self.d1() - self.sigma * np.sqrt(self.T)
    
    
    
    def Call_Option(self):
        return self.S * self.N(self.d1()) - self.K * np.exp(-self.r * self.T) * self.N(self.d2())
    
    
    def Put_Option(self):
        return self.K*np.exp(-self.r*self.T)*self.N(-self.d2()) - self.S*self.N(-self.d1())
    
    
    def Call_Delta(self):
        return self.N(self.d1())
    
    
    def Put_Delta(self):
        return -1*self.N(-self.d2())




Call = Options(S = 100, K = 100, T = 5, r = .05, sigma = .07)

Call.Call_Option()


Apple = stock_volatility('AAPL')

vols = Apple['Rolling_Sigma']
px = Apple['price']

call_prices = []
put_prices = []
for i,j in zip(vols, px):
    my_option = Options(S = j, K = 100, T = 3, r = .05, sigma = i)
    call_price = my_option.Call_Option()
    put_price = my_option.Put_Option()
    call_prices.append(call_price)
    put_prices.append(put_price)


vols.plot(title = 'AAPL Volatility')


my_df = pd.DataFrame({'Stock Price': px, 'Stock Volatility': vols, 'Call Price': call_prices, 'Put Price': put_prices})

my_df[['Stock Price', 'Call Price', 'Put Price']].plot(title = "Option Prices on $100 Strike")
